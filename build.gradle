plugins {
	id 'fabric-loom' version '0.2.5-SNAPSHOT'
	id 'maven-publish'
}

repositories {
	mavenLocal() // for LibGui text field fix
	maven { url 'https://maven.fabricmc.net/' }
    maven { url 'http://server.bbkr.space:8081/artifactory/libs-release' }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-resource-loader-v0:0.1.2+232e294c42"
	modImplementation "net.fabricmc.fabric-api:fabric-object-builders-v0:0.1.1+9fe2f882"
	modApi "net.fabricmc.fabric-api:fabric-networking-blockentity-v0:0.1.1+b494ebeb42"
	modApi "io.github.cottonmc:LibGui:1.3.1-SNAPSHOT"

    include "io.github.cottonmc:LibGui:1.3.1-SNAPSHOT"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
